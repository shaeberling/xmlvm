<project name="xmlvm" default="all" basedir=".">


	<property name="homepage.dir" value="../XML11HomePage" />

	<property name="xmlvm.jar" value="./dist/xmlvm.jar" />
	<property name="xmlvm.libjars" value="./dist/lib/" />
	<property name="xmlvm.dist" value="./dist" />

	<property name="xmlvm.demo" value="./dist/demo" />

	<property name="xmlvm.build" value="build/base" />
	<property name="xmlvm.build.main" value="${xmlvm.build}/main" />
	<property name="xmlvm.build.lib" value="${xmlvm.build}/lib" />
	<property name="xmlvm.bin" value="build/bin" />

	<property name="xmlvm.objc-compat-lib" value="build/compat-lib/iphone" />
	
	<property name="xmlvm.android-compat-lib" value="build/compat-lib/android" />
	<property name="xmlvm.android-compat-lib.java" value="${xmlvm.android-compat-lib}/java" />
	<property name="xmlvm.android-compat-lib.objc" value="${xmlvm.android-compat-lib}/objc" />

	<property name="xmlvm.isound" value="build/demo/iphone/isound" />
	<property name="xmlvm.ifireworks" value="build/demo/iphone/ifireworks" />
	<property name="xmlvm.iremote" value="build/demo/iphone/iremote" />
	<property name="xmlvm.ihelloworld" value="build/demo/iphone/ihelloworld" />
	<property name="xmlvm.iglnehelesson4" value="build/demo/iphone/gl/nehelesson4" />
	<property name="xmlvm.widgets" value="build/widgets" />

	<property name="xmlvm.afireworks" value="build/demo/android/afireworks" />
	<property name="xmlvm.aremote" value="build/demo/android/aremote" />
	<property name="xmlvm.xokoban" value="build/demo/android/xokoban" />
	<property name="xmlvm.sayhello" value="build/demo/android/sayhello" />

	<property name="xmlvm.opengl" value="build/demo/android/opengl" />

	<property name="xmlvm.demo.classpath" value="${basedir}/dist/xmlvm.jar"/>

	<property name="debug" value="yes" />
	<property name="doc.dir" value="doc" />
	<property name="ant.build.javac.target" value="1.5"/>

	<property name="tmp.dir" value="${xmlvm.main}" />
	<property name="cscCompiler" value="C:/WINDOWS/Microsoft.NET/Framework/v2.0.50727/csc.exe" />



	<target name="all" depends="xmlvmjar,build-objc-compat-lib,build-iphoneDemo">

	</target>
	<path id="classpath.compile">
		<pathelement location="lib/dx.jar" />
		<pathelement location="lib/bcel.jar" />
		<pathelement location="lib/jdom.jar" />
		<pathelement location="lib/mbel.jar" />
		<pathelement location="lib/yuicompressor-2.1.2.jar" />
		<pathelement location="lib/czlUtil.jar" />
		<pathelement location="lib/saxon9.jar" />
		<pathelement location="lib/lwjgl.jar" />
		<pathelement location="lib/basicplayer3.0.jar" />
	</path>

		
	<path id="classpath.run">
		<pathelement location="${xmlvm.bin}" />
		<pathelement location="src/xmlvm2objc/xsl" />
		<pathelement location="lib/dx.jar" />
		<pathelement location="lib/bcel.jar" />
		<pathelement location="lib/mbel.jar" />
		<pathelement location="lib/jdom.jar" />
		<pathelement location="lib/jakarta-regexp.jar" />
		<pathelement location="lib/saxon9.jar" />
		<pathelement location="lib/xercesImpl.jar" />
		<pathelement location="lib/lwjgl.jar" />
	</path>


	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${xmlvm.demo}" />
		<mkdir dir="${xmlvm.libjars}" />
		<mkdir dir="${xmlvm.build}" />
		<mkdir dir="${xmlvm.build.main}" />
		<mkdir dir="${xmlvm.build.lib}" />
		<mkdir dir="${xmlvm.bin}" />
		<mkdir dir="${xmlvm.bin}/iphone" />
	</target>

	<target name="build-objc-compat-lib" depends="build-xmlvm">
		<echo message="Generating objc-compat.jar" />
		<mkdir dir="${xmlvm.objc-compat-lib}" />
		<javac srcdir="src/xmlvm2objc/compat-lib/java" destdir="${xmlvm.objc-compat-lib}" debug="${debug}">
			<classpath refid="classpath.compile" />
			<classpath>
			    <pathelement location="${xmlvm.bin}" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<jar destfile="${xmlvm.libjars}/objc-compat.jar">
			<fileset dir="${xmlvm.objc-compat-lib}" />
		</jar>
	</target>

	<target name="build-android-compat-lib" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.android-compat-lib.java}" />
		<javac srcdir="./src/android2iphone" destdir="${xmlvm.android-compat-lib.java}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<jar destfile="${xmlvm.libjars}/android-compat.jar">
			<fileset dir="${xmlvm.android-compat-lib.java}" />
		</jar>
	</target>

	<target name="cc-android-compat-lib" depends="build-android-compat-lib,build-xmlvm">
		<uptodate property="cc-android-compat-lib.notrequired" targetfile="${xmlvm.android-compat-lib.objc}">
   			<srcfiles dir= "${xmlvm.android-compat-lib.java}" includes="**/*.class"/>
  		</uptodate>
		<antcall target="cc-android-compat-lib.impl"/>
	</target>
	
	<target name="cc-android-compat-lib.impl" unless="cc-android-compat-lib.notrequired">
		<echo message="Building android compatibility lib"/>
		<mkdir dir="${xmlvm.android-compat-lib.objc}" />
		<java classname="org.xmlvm.proc.NewMain">
			<arg value="--out=${xmlvm.android-compat-lib.objc}" />
			<arg value="--target=objc" />
			<arg value="--in=${xmlvm.android-compat-lib.java}/" />
			<classpath refid="classpath.run" />
		</java>
	</target>

	<target name="build-xmlvm" depends="init">
		<echo message="Compiling XMLVM" />
		<mkdir dir="${xmlvm.build.main}" />
		<javac srcdir="src/xmlvm" destdir="${xmlvm.bin}" debug="${debug}">
			<classpath refid="classpath.compile" />
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="jar" depends="xmlvmjar"/>

	<target name="xmlvmjar" depends="cc-android-compat-lib">

		<copy todir="${xmlvm.build.lib}">
			<fileset dir="lib">
				<include name="**/*.jar/" />
				<exclude name="one-jar-boot.jar" />
				<exclude name="lwjgl.jar" />
			</fileset>
		</copy>

		<unjar src="lib/one-jar-boot.jar" dest="${xmlvm.build}">
			<patternset>
				<include name="**/*.class" />
				<exclude name="OneJar.class" />
			</patternset>
		</unjar>

		<unjar src="lib/lwjgl.jar" dest="${xmlvm.build}">
			<patternset>
				<include name="**/*.class" />
			</patternset>
		</unjar>

		<unjar src="dist/lib/objc-compat.jar" dest="${xmlvm.build}">
			<patternset>
				<include name="**/*.class" />
			</patternset>
		</unjar>

		<unjar src="dist/lib/android-compat.jar" dest="${xmlvm.build}">
			<patternset>
				<include name="**/*.class" />
			</patternset>
		</unjar>

		<javac srcdir="src/tools/ant/xcode-updater/" destdir="${xmlvm.build}" debug="${debug}">
			<include name="**/*.java" />
		</javac>
		<delete file="${xmlvm.build}/org/apache/tools/ant/BuildException.class"/>
		<delete file="${xmlvm.build}/org/apache/tools/ant/Task.class"/>

		<copy todir="${xmlvm.bin}" flatten="true">
			<fileset dir="src">
				<include name="**/*.xsl" />
			</fileset>
		</copy>

		<jar destfile="${xmlvm.bin}/iphone/compat-lib.jar">
			<fileset dir="src/xmlvm2objc/compat-lib/objc/" />
		</jar>

		<jar destfile="${xmlvm.bin}/iphone/android-compat-lib.jar">
			<fileset dir="${xmlvm.android-compat-lib.objc}" />
		</jar>

		<copy todir="${xmlvm.bin}/iphone">
			<fileset file="var/iphone/Makefile" />
			<fileset file="var/iphone/project.template" />
			<fileset file="var/iphone/Info.plist" />
		</copy>

		<mkdir dir="${xmlvm.build}/xmlvm2js" />
		<jar destfile="${xmlvm.build}/xmlvm2js/xmlvm2js.jar">
			<fileset dir="src/xmlvm2js/" />
		</jar>

		<copy todir="${xmlvm.build}/xmlvm2js">
			<fileset file="src/xmlvm2js/Application.js.template" />
		</copy>

		<copy todir="${xmlvm.bin}/iphone/netbeans">
			<fileset dir="var/iphone/netbeans/" />
		</copy>

		<copy todir="${xmlvm.build}/sys_resources">
			<fileset file="var/iphone/battery.png"/>
			<fileset file="var/iphone/chassis.png"/>
			<fileset file="var/iphone/wifi.png"/>
			<fileset file="var/iphone/*.gif"/>
		</copy>

		<jar destfile="${xmlvm.build.main}/main.jar" basedir="${xmlvm.bin}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Implementation-Title" value="XMLVM" />
				<attribute name="Implementation-Version" value="alpha" />
				<attribute name="Main-Class" value="com.simontuffs.onejar.Boot" />
				<attribute name="One-Jar-Main-Class" value="org.xmlvm.proc.NewMain" />
			</manifest>
		</jar>

		<jar destfile="${xmlvm.jar}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Implementation-Title" value="XMLVM" />
				<attribute name="Implementation-Version" value="alpha" />
				<attribute name="Main-Class" value="com.simontuffs.onejar.Boot" />
				<attribute name="One-Jar-Main-Class" value="org.xmlvm.proc.NewMain" />
			</manifest>
			<fileset dir="${xmlvm.build}" />
		</jar>
	</target>


	<target name="build-iphoneDemo" depends="all-ihelloworld,
											 build-iglnehelesson4,cc-iglnehelesson4,
											 cc-ifireworks,cc-iremote,cc-isound,
											 sim-afireworks-jar,cc-sim-afireworks,sim-xokoban-jar,cc-sim-xokoban,sim-sayhello-jar,cc-sim-sayhello">
	</target>

	<target name="all-cc" depends="all-ihelloworld,cc-ifireworks,cc-iremote,cc-isound,cc-sim-afireworks,cc-sim-aremote,cc-sim-sayhello,cc-sim-xokoban"/>

	<target name="all-ihelloworld" depends="cc-ihelloworld-portrait,cc-ihelloworld-landscape,cc-ihelloworld-fullscreen,cc-ihelloworld-upsidedown"/>
	
	<target name="build-ihelloworld-portrait" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.ihelloworld}/portrait" />
		<javac srcdir="demo/iphone/ihelloworld/portrait/src" destdir="${xmlvm.ihelloworld}/portrait" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iphone/ihelloworld/portrait/java"/>
		<jar destfile="${xmlvm.demo}/iphone/ihelloworld/portrait/java/ihelloworld.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.demo.ihelloworld.portrait.HelloWorld" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.ihelloworld}/portrait" />
		</jar>
	</target>

	<target name="cc-ihelloworld-portrait" depends="xmlvmjar,build-ihelloworld-portrait">
		<mkdir dir="${xmlvm.demo}/iphone/ihelloworld/portrait/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/iphone/ihelloworld/portrait/iphone" />
			<arg value="--target=iphone" />
			<arg value="--app-name=iHelloWorld" />
			<arg value="--in=${xmlvm.ihelloworld}/portrait/" />
		</java>
	</target>

	<target name="build-iglnehelesson4" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.iglnehelesson4}" />
		<javac srcdir="demo/iphone/gl/nehelesson4/src" destdir="${xmlvm.iglnehelesson4}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iphone/iglnehelesson4/java"/>
		<jar destfile="${xmlvm.demo}/iphone/iglnehelesson4/java/iglnehelesson4.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.iphone.demo.gl.nehelesson4.NeHeLesson4" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.iglnehelesson4}" />
		</jar>
	</target>

	<target name="cc-iglnehelesson4" depends="xmlvmjar,build-iglnehelesson4">
		<mkdir dir="${xmlvm.demo}/iphone/iglnehelesson4/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/iphone/iglnehelesson4/iphone" />
			<arg value="--target=iphone" />
			<arg value="--iphone-app=iGLNeHeLesson4" />
			<arg value="--in=${xmlvm.iglnehelesson4}/" />
		</java>
	</target>
	
	<target name="build-ihelloworld-upsidedown" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.ihelloworld}/upsidedown" />
		<javac srcdir="demo/iphone/ihelloworld/upsidedown/src" destdir="${xmlvm.ihelloworld}/upsidedown" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iphone/ihelloworld/upsidedown/java"/>
		<jar destfile="${xmlvm.demo}/iphone/ihelloworld/upsidedown/java/ihelloworld.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.demo.ihelloworld.upsidedown.HelloWorld" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.ihelloworld}/upsidedown" />
		</jar>
	</target>

	<target name="cc-ihelloworld-upsidedown" depends="xmlvmjar,build-ihelloworld-upsidedown">
		<mkdir dir="${xmlvm.demo}/iphone/ihelloworld/upsidedown/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/iphone/ihelloworld/upsidedown/iphone" />
			<arg value="--target=iphone" />
			<arg value="--app-name=iHelloWorld" />
			<arg value="--in=${xmlvm.ihelloworld}/upsidedown/" />
		</java>
	</target>

	<target name="build-ihelloworld-landscape" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.ihelloworld}/landscape" />
		<javac srcdir="demo/iphone/ihelloworld/landscape/src" destdir="${xmlvm.ihelloworld}/landscape" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iphone/ihelloworld/landscape/java"/>
		<jar destfile="${xmlvm.demo}/iphone/ihelloworld/landscape/java/ihelloworld.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.demo.ihelloworld.landscape.HelloWorld" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.ihelloworld}/landscape" />
		</jar>
	</target>

	<target name="cc-ihelloworld-landscape" depends="xmlvmjar,build-ihelloworld-landscape">
		<mkdir dir="${xmlvm.demo}/iphone/ihelloworld/landscape/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/iphone/ihelloworld/landscape/iphone" />
			<arg value="--target=iphone" />
			<arg value="--app-name=iHelloWorld" />
			<arg value="--in=${xmlvm.ihelloworld}/landscape/" />
		</java>
	</target>

	<target name="build-ihelloworld-fullscreen" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.ihelloworld}/fullscreen" />
		<javac srcdir="demo/iphone/ihelloworld/fullscreen/src" destdir="${xmlvm.ihelloworld}/fullscreen" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iphone/ihelloworld/fullscreen/java"/>
		<jar destfile="${xmlvm.demo}/iphone/ihelloworld/fullscreen/java/ihelloworld.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.demo.ihelloworld.fullscreen.HelloWorld" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.ihelloworld}/fullscreen" />
		</jar>
	</target>

	<target name="cc-ihelloworld-fullscreen" depends="xmlvmjar,build-ihelloworld-fullscreen">
		<mkdir dir="${xmlvm.demo}/iphone/ihelloworld/fullscreen/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/iphone/ihelloworld/fullscreen/iphone" />
			<arg value="--target=iphone" />
			<arg value="--app-name=iHelloWorld" />
			<arg value="--in=${xmlvm.ihelloworld}/fullscreen/" />
		</java>
	</target>

	<target name="build-ibuttontest" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.widgets}/button" />
		<javac srcdir="src/test/iphone/org/xmlvm/test/iphone/widgets/button" destdir="${xmlvm.widgets}/button" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/widgets/ibuttontest/java"/>
		<jar destfile="${xmlvm.demo}/widgets/ibuttontest/java/ibuttontest.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.test.iphone.widgets.button.UIButtonTest" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.widgets}/button" />
		</jar>
	</target>

	<target name="build-isound" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.isound}" />
		<javac srcdir="demo/iphone/isound/src" destdir="${xmlvm.isound}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iphone/isound/java" />
		<jar destfile="${xmlvm.demo}/iphone/isound/java/isound.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.demo.isound.ISound" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath} ../../../../../lib/basicplayer3.0.jar ../../../../../lib/jl1.0.jar ../../../../../lib/mp3spi1.9.4.jar ../../../../../lib/tritonus_share.jar ../../../../../lib/commons-logging-api-1.1.jar" />
			</manifest>
			<fileset dir="${xmlvm.isound}" />
			<fileset dir="demo/iphone/isound/res">
				<include name="*.mp3" />
			</fileset>
		</jar>
	</target>

	<target name="cc-isound" depends="xmlvmjar,build-isound">
		<mkdir dir="${xmlvm.demo}/iphone/isound/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/iphone/isound/iphone" />
			<arg value="--target=iphone" />
			<arg value="--app-name=iSound" />
			<arg value="--in=${xmlvm.isound}/" />
			<arg value="--resource=demo/iphone/isound/res/"/>
		</java>
	</target>

	<target name="build-ifireworks" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.ifireworks}" />
		<javac srcdir="demo/iphone/ifireworks/src" destdir="${xmlvm.ifireworks}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iphone/ifireworks/java" />
		<jar destfile="${xmlvm.demo}/iphone/ifireworks/java/ifireworks.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.demo.ifireworks.Main" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.ifireworks}" />
			<fileset dir="demo/iphone/ifireworks/ires">
				<include name="*.png" />
			</fileset>
		</jar>
	</target>

	<target name="cc-ifireworks" depends="xmlvmjar,build-ifireworks">
		<mkdir dir="${xmlvm.demo}/iphone/ifireworks/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true" maxmemory="512m">
			<arg value="--out=${xmlvm.demo}/iphone/ifireworks/iphone" />
			<arg value="--target=iphone" />
			<arg value="--app-name=iFireworks" />
			<arg value="--in=${xmlvm.ifireworks}/" />
			<arg value="--resource=demo/iphone/ifireworks/ires/"/>
		</java>
	</target>

	<target name="sim-afireworks" depends="build-android-compat-lib">
		<mkdir dir="${xmlvm.afireworks}" />
		<javac srcdir="./demo/android/afireworks" destdir="${xmlvm.afireworks}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
				<pathelement location="${xmlvm.libjars}/android-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="sim-afireworks-jar" depends="sim-afireworks">
		<mkdir dir="${xmlvm.demo}/android/afireworks/java" />
		<jar destfile="${xmlvm.demo}/android/afireworks/java/afireworks.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="android.internal.AndroidAppLauncher" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.afireworks}" />
			<fileset dir="demo/android/afireworks">
				<include name="*.xml" />
				<include name="res/**" />
			</fileset>
		</jar>
	</target>

	<target name="cc-sim-afireworks" depends="sim-afireworks,xmlvmjar">
		<mkdir dir="${xmlvm.demo}/android/afireworks/iphone" />

		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/android/afireworks/iphone" />
			<arg value="--target=android-on-iphone" />
			<arg value="--app-name=aFireworks" />
			<arg value="--in=${xmlvm.afireworks}/" />
			<arg value="--resource=demo/android/afireworks/res"/>
			<arg value="--resource=demo/android/afireworks/AndroidManifest.xml"/>
		</java>
	</target>

	<target name="sim-aremote" depends="build-android-compat-lib">
		<mkdir dir="${xmlvm.aremote}" />
		<javac srcdir="./demo/android/aremote" destdir="${xmlvm.aremote}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
				<pathelement location="${xmlvm.libjars}/android-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="sim-aremote-jar" depends="sim-aremote">
		<mkdir dir="${xmlvm.demo}/android/aremote/java" />
		<jar destfile="${xmlvm.demo}/android/aremote/java/aremote.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.iphone.internal.AndroidAppLauncher" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.aremote}" />
		</jar>
	</target>

	<target name="cc-sim-aremote" depends="sim-aremote,xmlvmjar">
		<mkdir dir="${xmlvm.demo}/android/aremote/iphone" />

		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/android/aremote/iphone" />
			<arg value="--target=android-on-iphone" />
			<arg value="--app-name=aRemote" />
			<arg value="--in=${xmlvm.aremote}/" />
		</java>
	</target>

	<target name="sim-xokoban" depends="build-android-compat-lib">
		<mkdir dir="${xmlvm.xokoban}" />
		<javac srcdir="./demo/android/xokoban" destdir="${xmlvm.xokoban}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
				<pathelement location="${xmlvm.libjars}/android-compat.jar" />
			</classpath>
			<include name="src/**/*.java" />
			<include name="gen/**/*.java" />
		</javac>
	</target>

	<target name="sim-xokoban-jar" depends="sim-xokoban">
		<mkdir dir="${xmlvm.demo}/android/xokoban/java" />
		<jar destfile="${xmlvm.demo}/android/xokoban/java/xokoban.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="android.internal.AndroidAppLauncher" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.xokoban}" />
			<fileset dir="demo/android/xokoban">
				<include name="*.xml" />
				<include name="res/**" />
			</fileset>
		</jar>
	</target>

	<target name="cc-sim-xokoban" depends="sim-xokoban,xmlvmjar">
		<mkdir dir="${xmlvm.demo}/android/xokoban/iphone" />

		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/android/xokoban/iphone" />
			<arg value="--target=android-on-iphone" />
			<arg value="--app-name=Xokoban" />
			<arg value="--in=${xmlvm.xokoban}/" />
			<arg value="--resource=demo/android/xokoban/res" />
			<arg value="--resource=demo/android/xokoban/AndroidManifest.xml" />
		</java>
	</target>

	<target name="sim-sayhello" depends="build-android-compat-lib">
		<mkdir dir="${xmlvm.sayhello}" />
		<javac srcdir="./demo/android/sayhello" destdir="${xmlvm.sayhello}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
				<pathelement location="${xmlvm.libjars}/android-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="sim-sayhello-jar" depends="sim-sayhello">
		<mkdir dir="${xmlvm.demo}/android/sayhello/java" />
		<jar destfile="${xmlvm.demo}/android/sayhello/java/sayhello.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="android.internal.AndroidAppLauncher" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.sayhello}" />
			<fileset dir="demo/android/sayhello">
				<include name="*.xml" />
				<include name="res/**" />
			</fileset>
		</jar>
	</target>

	<target name="cc-sim-sayhello" depends="sim-sayhello,xmlvmjar">
		<mkdir dir="${xmlvm.demo}/android/sayhello/iphone" />

		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/android/sayhello/iphone" />
			<arg value="--target=android-on-iphone" />
			<arg value="--app-name=SayHello" />
			<arg value="--in=${xmlvm.sayhello}/" />
			<arg value="--resource=demo/android/sayhello/AndroidManifest.xml"/>
			<arg value="--resource=demo/android/sayhello/res"/>
		</java>
	</target>

	<target name="build-iremote" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.iremote}" />
		<javac srcdir="demo/iphone/iremote/src" destdir="${xmlvm.iremote}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iphone/iremote/java" />
		<jar destfile="${xmlvm.demo}/iphone/iremote/java/iremote.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.demo.iremote.Main" />
				<attribute name="Class-Path" value="${xmlvm.demo.classpath}" />
			</manifest>
			<fileset dir="${xmlvm.iremote}" />
		</jar>
	</target>

	<target name="cc-iremote" depends="xmlvmjar,build-iremote">
		<mkdir dir="${xmlvm.demo}/iphone/iremote/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/iphone/iremote/iphone" />
			<arg value="--target=iphone" />
			<arg value="--app-name=iRemote" />
			<arg value="--in=${xmlvm.iremote}/" />
		</java>
	</target>

	<target name="eventHandlerCompatLib" depends="build-xmlvm">
		<echo message="Compiling event handler for compat lib" />
		<exec executable="${cscCompiler}">
			<arg value="/out:${tmp.dir}/EventBinaries.exe" />
			<arg value="/warn:0" />
			<arg value="/nologo" />
			<arg value="src/clr2jvm/compat-lib/c_sharp/eventHandler/DummyMain.cs" />
			<arg value="src/clr2jvm/compat-lib/c_sharp/eventHandler/EventArgs.cs" />
			<arg value="src/clr2jvm/compat-lib/c_sharp/eventHandler/EventHandler.cs" />
		</exec>
		<echo message="Cross compiling event handler for compat lib" />
		<java classname="org.xmlvm.Main">
			<arg value="--java" />
			<arg value="--out=${xmlvm.main}" />
			<arg value="${tmp.dir}/EventBinaries.exe" />
			<classpath refid="classpath.run" />
		</java>
		<echo message="Compiling compat lib" />
		<javac srcdir="src/clr2jvm/compat-lib/Java" destdir="${xmlvm.main}" debug="${debug}">
			<classpath refid="classpath.compile" />
			<include name="**/*.java" />
		</javac>

		<delete file="${tmp.dir}/EventBinaries.exe" />
		<delete file="${xmlvm.main}/DummyMain.class" />
	</target>



	<target name="clean" description="Remove all build files">
		<delete dir="dist" />
		<delete dir="build" />
		<delete dir="${doc.dir}/homepage/lib" />
		<delete file="${doc.dir}/homepage/android/demo/xokoban.jar" />
		<delete file="${doc.dir}/homepage/iphone/demo/ifireworks.jar" />
	</target>

	<target name="homepage" depends="_createDirTree,_copyDemoJars" description="Copies all document files from the XMLVM source tree to xml11.org/xmlvm homepage">
		<copy todir="${homepage.dir}/htdocs/xmlvm">
			<fileset dir="${doc.dir}/homepage">
				<exclude name="**/CVS/*" />
			</fileset>
		</copy>
	</target>

	<target name="_createDirTree">
		<mkdir dir="${homepage.dir}" />
		<mkdir dir="${homepage.dir}/htdocs" />
		<mkdir dir="${homepage.dir}/htdocs/xmlvm" />
		<mkdir dir="${homepage.dir}/htdocs/xmlvm/download" />
		<mkdir dir="${homepage.dir}/htdocs/xmlvm/download/dist" />
	</target>

	<target name="_copyDemoJars"  depends="build-ifireworks,sim-xokoban-jar">
		<mkdir dir="${doc.dir}/homepage/lib" />
		<copy todir="${doc.dir}/homepage/lib" file="${xmlvm.libjars}/objc-compat.jar" />
		<copy todir="${doc.dir}/homepage/lib" file="${xmlvm.libjars}/android-compat.jar" />
		<copy todir="${doc.dir}/homepage/android/demo" file="${xmlvm.demo}/android/xokoban/java/xokoban.jar" />
		<copy todir="${doc.dir}/homepage/iphone/demo" file="${xmlvm.demo}/iphone/ifireworks/java/ifireworks.jar" />
	</target>
</project>
