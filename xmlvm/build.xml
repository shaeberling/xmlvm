<project name="xmlvm" default="all" basedir=".">


	<property name="homepage.dir" value="../XML11HomePage" />

	<property name="xmlvm.jar" value="./dist/xmlvm.jar" />
	<property name="xmlvm.libjars" value="./dist/lib/" />
	<property name="xmlvm.dist" value="./dist" />

	<property name="xmlvm.demo" value="./dist/demo" />

	<property name="xmlvm.build" value="build/base" />
	<property name="xmlvm.build.main" value="${xmlvm.build}/main" />
	<property name="xmlvm.build.lib" value="${xmlvm.build}/lib" />
	<property name="xmlvm.bin" value="build/bin" />

	<property name="xmlvm.objc-compat-lib" value="build/compat-lib/iphone" />
	
	<property name="xmlvm.android-compat-lib" value="build/compat-lib/android" />
	<property name="xmlvm.android-compat-lib.java" value="${xmlvm.android-compat-lib}/java" />
	<property name="xmlvm.android-compat-lib.objc" value="${xmlvm.android-compat-lib}/objc" />

	<property name="xmlvm.ifireworks" value="build/ifireworks" />
	<property name="xmlvm.iremote" value="build/iremote" />
	<property name="xmlvm.ihelloworld" value="build/ihelloworld" />

	<property name="xmlvm.afireworks" value="build/afireworks" />



	<property name="debug" value="yes" />
	<property name="doc.dir" value="doc" />


	<property name="tmp.dir" value="${xmlvm.main}" />
	<property name="cscCompiler" value="C:/WINDOWS/Microsoft.NET/Framework/v2.0.50727/csc.exe" />



	<target name="all" depends="xmlvmjar,build-objc-compat-lib,build-iphoneDemo">

	</target>
	<path id="classpath.compile">
		<pathelement location="lib/bcel.jar" />
		<pathelement location="lib/jdom.jar" />
		<pathelement location="lib/mbel.jar" />
		<pathelement location="lib/yuicompressor-2.1.2.jar" />
		<pathelement location="lib/czlUtil.jar" />
		<pathelement location="lib/saxon9.jar" />
	</path>

	<path id="classpath.run">
		<pathelement location="${xmlvm.bin}" />
		<pathelement location="src/xmlvm2objc/xsl" />
		<pathelement location="lib/bcel.jar" />
		<pathelement location="lib/mbel.jar" />
		<pathelement location="lib/jdom.jar" />
		<pathelement location="lib/jakarta-regexp.jar" />
		<pathelement location="lib/saxon9.jar" />
		<pathelement location="lib/xercesImpl.jar" />
	</path>


	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${xmlvm.demo}" />
		<mkdir dir="${xmlvm.libjars}" />
		<mkdir dir="${xmlvm.build}" />
		<mkdir dir="${xmlvm.build.main}" />
		<mkdir dir="${xmlvm.build.lib}" />
		<mkdir dir="${xmlvm.bin}" />
		<mkdir dir="${xmlvm.bin}/iphone" />
	</target>

	<target name="build-objc-compat-lib" depends="init">
		<echo message="Generating objc-compat.jar" />
		<mkdir dir="${xmlvm.objc-compat-lib}" />
		<javac srcdir="src/xmlvm2objc/compat-lib" destdir="${xmlvm.objc-compat-lib}" debug="${debug}">
			<classpath refid="classpath.compile" />
			<include name="**/*.java" />
		</javac>
		<jar destfile="${xmlvm.libjars}/objc-compat.jar">
			<fileset dir="${xmlvm.objc-compat-lib}" />
		</jar>
	</target>

	<target name="build-android-compat-lib" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.android-compat-lib.java}" />
		<javac srcdir="./src/android2iphone" destdir="${xmlvm.android-compat-lib.java}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<jar destfile="${xmlvm.libjars}/android-compat.jar">
			<fileset dir="${xmlvm.android-compat-lib.java}" />
		</jar>
	</target>

	<target name="cc-android-compat-lib" depends="build-android-compat-lib,build-xmlvm">
		<mkdir dir="${xmlvm.android-compat-lib.objc}" />
		<java classname="org.xmlvm.Main">
			<arg value="--out=${xmlvm.android-compat-lib.objc}" />
			<arg value="--objc" />
			<arg value="${xmlvm.android-compat-lib.java}/*.class" />
			<classpath refid="classpath.run" />
		</java>
	</target>

	<target name="build-xmlvm" depends="init">
		<mkdir dir="${xmlvm.build.main}" />
		<echo message="Compiling XMLVM" />
		<javac srcdir="src/xmlvm" destdir="${xmlvm.bin}" debug="${debug}">
			<classpath refid="classpath.compile" />
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="xmlvmjar" depends="cc-android-compat-lib">

		<copy todir="${xmlvm.build.lib}">
			<fileset dir="lib">
				<include name="**/*.jar/" />
				<exclude name="one-jar-boot.jar" />
			</fileset>
		</copy>

		<unjar src="lib/one-jar-boot.jar" dest="${xmlvm.build}">
			<patternset>
				<include name="**/*.class" />
				<exclude name="OneJar.class" />
			</patternset>
		</unjar>

		<copy todir="${xmlvm.bin}" flatten="true">
			<fileset dir="src">
				<include name="**/*.xsl" />
			</fileset>
		</copy>

		<jar destfile="${xmlvm.bin}/iphone/compat-lib.jar">
			<fileset dir="src/xmlvm2objc/compat-lib/objc/" />
		</jar>

		<jar destfile="${xmlvm.bin}/iphone/android-compat-lib.jar">
			<fileset dir="${xmlvm.android-compat-lib.objc}" />
		</jar>

		<copy todir="${xmlvm.bin}/iphone">
			<fileset file="var/iphone/Makefile" />
			<fileset file="var/iphone/Info.plist" />
		</copy>

		<jar destfile="${xmlvm.build.main}/main.jar" basedir="${xmlvm.bin}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Implementation-Title" value="XMLVM" />
				<attribute name="Implementation-Version" value="alpha" />
				<attribute name="Main-Class" value="com.simontuffs.onejar.Boot" />
				<attribute name="One-Jar-Main-Class" value="org.xmlvm.Main" />
			</manifest>
		</jar>

		<jar destfile="${xmlvm.jar}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Implementation-Title" value="XMLVM" />
				<attribute name="Implementation-Version" value="alpha" />
				<attribute name="Main-Class" value="com.simontuffs.onejar.Boot" />
				<attribute name="One-Jar-Main-Class" value="org.xmlvm.Main" />
			</manifest>
			<fileset dir="${xmlvm.build}" />
		</jar>
	</target>


	<target name="build-iphoneDemo" depends="build-ifireworks,build-ihelloworld,cc-ifireworks,cc-ihelloworld,build-android-compat-lib,cc-android-compat-lib,sim-afireworks-jar,cc-sim-afireworks,build-iremote">
	</target>

	<target name="build-ihelloworld" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.ihelloworld}" />
		<javac srcdir="src/test/iphone/org/xmlvm/test/iphone/ihelloworld" destdir="${xmlvm.ihelloworld}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/ihelloworld/java"/>
		<jar destfile="${xmlvm.demo}/ihelloworld/java/ihelloworld.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.test.iphone.ihelloworld.HelloWorld" />
				<attribute name="Class-Path" value="../../../lib/objc-compat.jar" />
			</manifest>
			<fileset dir="${xmlvm.ihelloworld}" />
			<fileset dir="var/iphone">
				<include name="*.png/" />
			</fileset>
		</jar>
	</target>

	<target name="cc-ihelloworld" depends="xmlvmjar">
		<mkdir dir="${xmlvm.demo}/ihelloworld/iphone/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/ihelloworld/iphone" />
			<arg value="--iphone-app=iHelloWorld" />
			<arg value="${xmlvm.ihelloworld}/*.class" />
		</java>
	</target>

	<target name="build-ifireworks" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.ifireworks}" />
		<javac srcdir="src/test/iphone/org/xmlvm/test/iphone/ifireworks" destdir="${xmlvm.ifireworks}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/ifireworks/java" />
		<jar destfile="${xmlvm.demo}/ifireworks/java/ifireworks.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.test.iphone.ifireworks.Main" />
				<attribute name="Class-Path" value="../../../lib/objc-compat.jar" />
			</manifest>
			<fileset dir="${xmlvm.ifireworks}" />
			<fileset dir="var/iphone">
				<include name="*.png/" />
			</fileset>
			<fileset dir="var/iphone/Applications/iFireworks.app">
				<include name="*.png" />
			</fileset>
		</jar>
	</target>

	<target name="cc-ifireworks" depends="xmlvmjar">
		<mkdir dir="${xmlvm.demo}/ifireworks/iphone" />
		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/ifireworks/iphone" />
			<arg value="--iphone-app=iFireworks" />
			<arg value="${xmlvm.ifireworks}/*.class" />
		</java>

		<copy todir="${xmlvm.demo}/ifireworks/iphone">
			<fileset dir="var/iphone/Applications/iFireworks.app">
				<include name="*.png" />
			</fileset>
		</copy>
	</target>

	<target name="sim-afireworks" depends="build-android-compat-lib">
		<mkdir dir="${xmlvm.afireworks}" />
		<javac srcdir="./src/demo/AndroidFireworks" destdir="${xmlvm.afireworks}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
				<pathelement location="${xmlvm.libjars}/android-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="sim-afireworks-jar" depends="sim-afireworks">
		<mkdir dir="${xmlvm.demo}/afireworks/java" />
		<jar destfile="${xmlvm.demo}/afireworks/java/afireworks.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.iphone.internal.AndroidAppLauncher" />
				<attribute name="Class-Path" value="../../../lib/objc-compat.jar ../../../lib/android-compat.jar" />
			</manifest>
			<fileset dir="${xmlvm.afireworks}" />
			<fileset dir="var/iphone">
				<include name="*.png/" />
			</fileset>
			<fileset dir="var/iphone/Applications/iFireworks.app">
				<include name="*.png" />
			</fileset>
		</jar>
	</target>

	<target name="cc-sim-afireworks" depends="sim-afireworks">
		<mkdir dir="${xmlvm.demo}/afireworks/iphone" />

		<java jar="${xmlvm.dist}/xmlvm.jar" fork="true">
			<arg value="--out=${xmlvm.demo}/afireworks/iphone" />
			<arg value="--android2iphone=aFireworks" />
			<arg value="${xmlvm.afireworks}/*.class" />
		</java>
		<copy todir="${xmlvm.demo}/aFireworks/iphone">
			<fileset dir="var/iphone/Applications/iFireworks.app">
				<include name="*.png" />
			</fileset>
		</copy>
	</target>

	<target name="build-iremote" depends="build-objc-compat-lib">
		<mkdir dir="${xmlvm.iremote}" />
		<javac srcdir="src/xmlvm2objc/compat-lib/java/org/xmlvm/iphone/remote" destdir="${xmlvm.iremote}" debug="${debug}">
			<classpath>
				<pathelement location="${xmlvm.libjars}/objc-compat.jar" />
			</classpath>
			<include name="**/*.java" />
		</javac>
		<mkdir dir="${xmlvm.demo}/iremote/java" />
		<jar destfile="${xmlvm.demo}/iremote/java/iremote.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Vendor" value="xmlvm.org" />
				<attribute name="Main-Class" value="org.xmlvm.iphone.remote.Main" />
				<attribute name="Class-Path" value="../../../lib/objc-compat.jar" />
			</manifest>
			<fileset dir="${xmlvm.iremote}" />
			<fileset dir="var/iphone">
				<include name="*.png/" />
			</fileset>
		</jar>
	</target>

	<target name="eventHandlerCompatLib" depends="build-xmlvm">
		<echo message="Compiling event handler for compat lib" />
		<exec executable="${cscCompiler}">
			<arg value="/out:${tmp.dir}/EventBinaries.exe" />
			<arg value="/warn:0" />
			<arg value="/nologo" />
			<arg value="src/clr2jvm/compat-lib/c_sharp/eventHandler/DummyMain.cs" />
			<arg value="src/clr2jvm/compat-lib/c_sharp/eventHandler/EventArgs.cs" />
			<arg value="src/clr2jvm/compat-lib/c_sharp/eventHandler/EventHandler.cs" />
		</exec>
		<echo message="Cross compiling event handler for compat lib" />
		<java classname="org.xmlvm.Main">
			<arg value="--java" />
			<arg value="--out=${xmlvm.main}" />
			<arg value="${tmp.dir}/EventBinaries.exe" />
			<classpath refid="classpath.run" />
		</java>
		<echo message="Compiling compat lib" />
		<javac srcdir="src/clr2jvm/compat-lib/Java" destdir="${xmlvm.main}" debug="${debug}">
			<classpath refid="classpath.compile" />
			<include name="**/*.java" />
		</javac>

		<delete file="${tmp.dir}/EventBinaries.exe" />
		<delete file="${xmlvm.main}/DummyMain.class" />
	</target>



	<target name="clean" description="Remove all build files">
		<delete dir="dist" />
		<delete dir="build" />
	</target>

	<target name="homepage" depends="_createDirTree" description="Copies all document files from the XMLVM source tree to xml11.org/xmlvm homepage">

		<copy todir="${homepage.dir}/htdocs/xmlvm">
			<fileset dir="${doc.dir}/homepage">
				<exclude name="**/CVS/*" />
			</fileset>
		</copy>

	</target>

	<target name="_createDirTree">
		<mkdir dir="${homepage.dir}" />
		<mkdir dir="${homepage.dir}/htdocs" />
		<mkdir dir="${homepage.dir}/htdocs/xmlvm" />
		<mkdir dir="${homepage.dir}/htdocs/xmlvm/download" />
		<mkdir dir="${homepage.dir}/htdocs/xmlvm/download/dist" />
	</target>

</project>
