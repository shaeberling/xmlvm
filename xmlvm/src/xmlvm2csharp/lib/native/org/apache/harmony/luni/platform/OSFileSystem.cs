// Automatically generated by xmlvm2csharp (do not edit).

using global::org.xmlvm;
namespace org.apache.harmony.luni.platform {
public class OSFileSystem: global::java.lang.Object,global::org.apache.harmony.luni.platform.IFileSystem {
private static void oneTimeInitializationImpl(){
//XMLVM_BEGIN_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: void oneTimeInitializationImpl()]
      //nothing to do
//XMLVM_END_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: void oneTimeInitializationImpl()]
}

private long readImpl(long n1, global::org.xmlvm._nArrayAdapter<sbyte> n2, int n3, int n4){
//XMLVM_BEGIN_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: long readImpl(long, byte[], int, int)]
#if CONSOLE
    throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
#else 
    return files[n1].Stream.Read((byte[])(global::System.Array)n2.getCSharpArray(), n3, n4);
#endif
//XMLVM_END_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: long readImpl(long, byte[], int, int)]
}
private int closeImpl(long n1){
//XMLVM_BEGIN_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: int closeImpl(long)]
#if CONSOLE
    throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
#else 
    files[n1].Stream.Close();
    return 0;
#endif
//XMLVM_END_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: int closeImpl(long)]
}

private long openImpl(global::org.xmlvm._nArrayAdapter<sbyte> n1, int n2){
//XMLVM_BEGIN_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: long openImpl(byte[], int)]
#if CONSOLE
    throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
#else 
    global::java.lang.String path = new global::java.lang.String();
    path.@this(n1);
    long thisIndex = descriptor;
    descriptor++;
    global::System.String nativePath = global::org.xmlvm._nUtil.toNativeString(path);
    if (nativePath.StartsWith("/"))
    {
        nativePath = nativePath.Substring(1);
    }
    global::System.Uri uri = new global::System.Uri(nativePath, global::System.UriKind.Relative);
    files[thisIndex] = global::System.Windows.Application.GetResourceStream(uri);
    return thisIndex;
#endif
//XMLVM_END_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: long openImpl(byte[], int)]
}

private long availableImpl(long n1){
//XMLVM_BEGIN_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: long availableImpl(long)]
#if CONSOLE
    throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
#else 
    return files[n1].Stream.Length - files[n1].Stream.Position;
#endif
//XMLVM_END_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem: long availableImpl(long)]
}

//XMLVM_BEGIN_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem]
#if CONSOLE

#else 
	private long descriptor;
    private global::System.Collections.Generic.Dictionary<long, global::System.Windows.Resources.StreamResourceInfo> files = new System.Collections.Generic.Dictionary<long, global::System.Windows.Resources.StreamResourceInfo>();
#endif
//XMLVM_END_WRAPPER[org.apache.harmony.luni.platform.OSFileSystem]

} // end of class: OSFileSystem

} // end of namespace: org.apache.harmony.luni.platform
