// Automatically generated by xmlvm2csharp (do not edit).

using global::org.xmlvm;
namespace org.xmlvm.runtime {
public class Mutex: global::java.lang.Object {
private static void destroyNativeMutex(global::java.lang.Object n1){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.Mutex: void destroyNativeMutex(java.lang.Object)]
      throw new global::org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[org.xmlvm.runtime.Mutex: void destroyNativeMutex(java.lang.Object)]
}

private void initNativeInstance(){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.Mutex: void initNativeInstance()]
    // initializing a dummy object on which we monitor
    this._fnativeMutex = new java.lang.Object();
    this._fnativeMutex.@this();
//XMLVM_END_WRAPPER[org.xmlvm.runtime.Mutex: void initNativeInstance()]
}

public virtual void @lock(){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.Mutex: void lock()]
    throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    global::System.Threading.Monitor.Enter(this._fnativeMutex);
//XMLVM_END_WRAPPER[org.xmlvm.runtime.Mutex: void lock()]
}

public virtual void unlock(){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.Mutex: void unlock()]
    throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    global::System.Threading.Monitor.Exit(this._fnativeMutex);
//XMLVM_END_WRAPPER[org.xmlvm.runtime.Mutex: void unlock()]
}

//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.Mutex]
//XMLVM_END_WRAPPER[org.xmlvm.runtime.Mutex]

} // end of class: Mutex

} // end of namespace: org.xmlvm.runtime
