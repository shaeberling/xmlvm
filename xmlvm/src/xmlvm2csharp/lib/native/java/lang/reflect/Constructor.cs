// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.lang.reflect {
public class Constructor: java.lang.reflect.AccessibleObject,java.lang.reflect.GenericDeclaration,java.lang.reflect.Member {
public virtual global::System.Object getTypeParameters(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()]
    throw new org.xmlvm._nNativeImplementationException();

//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()]
}

public virtual global::System.Object toGenericString(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.String toGenericString()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.String toGenericString()]
}

public virtual global::System.Object getGenericParameterTypes(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()]
}

public virtual global::System.Object getGenericExceptionTypes(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()]
}

public virtual global::System.Object getParameterAnnotations(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()]
}

public virtual bool isVarArgs(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: boolean isVarArgs()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: boolean isVarArgs()]
}

public virtual bool isSynthetic(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: boolean isSynthetic()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: boolean isSynthetic()]
}

public override bool equals(java.lang.Object n1){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: boolean equals(java.lang.Object)]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: boolean equals(java.lang.Object)]
}

public virtual global::System.Object getDeclaringClass(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()]
}

public virtual global::System.Object getExceptionTypes(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()]
}

public override int getModifiers(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: int getModifiers()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: int getModifiers()]
}

public virtual global::System.Object getName(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.String getName()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.String getName()]
}

public virtual global::System.Object getParameterTypes(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()]
}

public override int hashCode(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: int hashCode()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: int hashCode()]
}

public virtual global::System.Object newInstance(org.xmlvm._nArrayAdapter<global::System.Object> n1){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])]
}

public override global::System.Object toString(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor: java.lang.String toString()]
    throw new org.xmlvm._nNativeImplementationException();
}

// injected nested class
public class _nImpl : java.lang.reflect.Constructor, org.xmlvm._nIJavaClient {

    // in the meantime we are using the _faddress to store the adapter
    public virtual void @this(java.lang.Object memberInfoAdapter) {
        base.@this();
        this._faddress = memberInfoAdapter;
    }

    public override global::System.Object getTypeParameters() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object toGenericString() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getGenericParameterTypes() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getGenericExceptionTypes() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getParameterAnnotations() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override bool isVarArgs() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override bool isSynthetic() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override bool equals(java.lang.Object n1) {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getDeclaringClass() {
        org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                      java.lang.reflect.Constructor._nImpl> adapter 
            = (org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                             java.lang.reflect.Constructor._nImpl>) this._faddress;
        global::System.Reflection.MethodInfo nativeMethodInfo = adapter.getMemberInfoAdaptee();
        global::System.Type nativeType = nativeMethodInfo.DeclaringType;
        java.lang.Class result = org.xmlvm._nTIB.getClass(nativeType);
        return result;
    }

    public override global::System.Object getExceptionTypes() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override int getModifiers() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getName() {
        org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                      java.lang.reflect.Constructor._nImpl> adapter 
            = (org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                             java.lang.reflect.Constructor._nImpl>) this._faddress;
        global::System.Reflection.MethodInfo nativeMethodInfo = adapter.getMemberInfoAdaptee();
        global::System.Type nativeType = nativeMethodInfo.DeclaringType;
        global::System.Object javaString = org.xmlvm._nTIB.getClass(nativeType).getName();
        return javaString;
    }

    public override global::System.Object getParameterTypes() {
        org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                      java.lang.reflect.Constructor._nImpl> adapter 
            = (org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                             java.lang.reflect.Constructor._nImpl>) this._faddress;
        global::System.Reflection.MethodInfo methodInfo = adapter.getMemberInfoAdaptee();
        global::System.Reflection.ParameterInfo[] parameterInfos = methodInfo.GetParameters();
        java.lang.Class[] parameterJavaTypes = new java.lang.Class[parameterInfos.Length];
        for (int i=0; i<parameterInfos.Length; i++) {
            global::System.Type parameterNativeType = parameterInfos[i].ParameterType;
            parameterJavaTypes[i] = org.xmlvm._nTIB.getClass(parameterNativeType);
        }
        org.xmlvm._nArrayAdapter<object> result = new org.xmlvm._nArrayAdapter<object>(parameterJavaTypes);
        return result;
    }

    public override int hashCode() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object newInstance(org.xmlvm._nArrayAdapter<global::System.Object> n1) {
        org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                      java.lang.reflect.Constructor._nImpl> adapter 
            = (org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                             java.lang.reflect.Constructor._nImpl>) this._faddress;
        global::System.Reflection.MethodInfo jConstructorInfo = adapter.getMemberInfoAdaptee();
        global::System.Type nativeType = jConstructorInfo.DeclaringType;
        object resultObj = global::System.Activator.CreateInstance(nativeType);
        object[] jConstructorParameters = n1.getCSharpArray();
        global::System.Reflection.ParameterInfo[] parameterInfos = jConstructorInfo.GetParameters();
        for (int i=0; i<jConstructorParameters.Length; i++) {
            jConstructorParameters[i] 
                = org.xmlvm._nTIB.unboxIfPrimitive((java.lang.Object)jConstructorParameters[i], parameterInfos[i].ParameterType);
        }
        jConstructorInfo.Invoke(resultObj,jConstructorParameters);
        return resultObj;
    }

    public override global::System.Object toString() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

//XMLVM_END_WRAPPER[java.lang.reflect.Constructor: java.lang.String toString()]
}

//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Constructor]
//XMLVM_END_WRAPPER[java.lang.reflect.Constructor]

} // end of class: Constructor

} // end of namespace: java.lang.reflect
