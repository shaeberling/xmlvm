// Automatically generated by xmlvm2csharp (do not edit).

using global::org.xmlvm;
namespace java.lang {
public class Thread: global::java.lang.Object,global::java.lang.Runnable {
private void initMainThread(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void initMainThread()]
      throw new global::org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void initMainThread()]
}

public static int activeCount(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: int activeCount()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: int activeCount()]
}

public virtual void checkAccess(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void checkAccess()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void checkAccess()]
}

public virtual int countStackFrames(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: int countStackFrames()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: int countStackFrames()]
}

private static long getCurrentThreadNativeId(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: long getCurrentThreadNativeId()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: long getCurrentThreadNativeId()]
}

public virtual void destroy(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void destroy()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void destroy()]
}

public static void dumpStack(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void dumpStack()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void dumpStack()]
}

public static int enumerate(global::org.xmlvm._nArrayAdapter<global::System.Object> n1){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: int enumerate(java.lang.Thread[])]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: int enumerate(java.lang.Thread[])]
}

public static global::System.Object getAllStackTraces(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: java.util.Map getAllStackTraces()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: java.util.Map getAllStackTraces()]
}

public virtual global::System.Object getContextClassLoader(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: java.lang.ClassLoader getContextClassLoader()]
      throw new global::org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: java.lang.ClassLoader getContextClassLoader()]
}

public static global::System.Object getDefaultUncaughtExceptionHandler(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()]
}

public virtual global::System.Object getStackTrace(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()]
}

public virtual global::System.Object getUncaughtExceptionHandler(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()]
}

public virtual void join(long n1, int n2){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void join(long, int)]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void join(long, int)]
}

public virtual void resume(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void resume()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void resume()]
}

private static bool stackTracesEnabled(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: boolean stackTracesEnabled()]
      throw new global::org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: boolean stackTracesEnabled()]
}

public virtual void setContextClassLoader(global::java.lang.ClassLoader n1){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)]
}

public static void setDefaultUncaughtExceptionHandler(global::java.lang.Thread_2UncaughtExceptionHandler n1){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)]
}

public virtual void setPriority(int n1){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void setPriority(int)]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void setPriority(int)]
}

public virtual void setUncaughtExceptionHandler(global::java.lang.Thread_2UncaughtExceptionHandler n1){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)]
}

public virtual void start0(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void start0()]
      throw new global::org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void start0()]
}

public virtual void stop(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void stop()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void stop()]
}

public virtual void stop(global::java.lang.Throwable n1){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void stop(java.lang.Throwable)]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void stop(java.lang.Throwable)]
}

public virtual void suspend(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void suspend()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void suspend()]
}

public static void yield(){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: void yield()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: void yield()]
}

public static bool holdsLock(global::java.lang.Object n1){
//XMLVM_BEGIN_WRAPPER[java.lang.Thread: boolean holdsLock(java.lang.Object)]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.lang.Thread: boolean holdsLock(java.lang.Object)]
}

//XMLVM_BEGIN_WRAPPER[java.lang.Thread]
//XMLVM_END_WRAPPER[java.lang.Thread]

} // end of class: Thread

} // end of namespace: java.lang
