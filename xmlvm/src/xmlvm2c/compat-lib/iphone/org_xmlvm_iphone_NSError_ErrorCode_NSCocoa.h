#ifndef __ORG_XMLVM_IPHONE_NSERROR_ERRORCODE_NSCOCOA__
#define __ORG_XMLVM_IPHONE_NSERROR_ERRORCODE_NSCOCOA__

#include "xmlvm.h"

// Preprocessor constants for interfaces:
#include "java_lang_Object.h"

// Circular references:
#ifndef XMLVM_FORWARD_DECL_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa
#define XMLVM_FORWARD_DECL_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa
XMLVM_FORWARD_DECL(org_xmlvm_iphone_NSError_ErrorCode_NSCocoa)
#endif
// Class declarations for org.xmlvm.iphone.NSError$ErrorCode$NSCocoa
XMLVM_DEFINE_CLASS(org_xmlvm_iphone_NSError_ErrorCode_NSCocoa, 6, XMLVM_ITABLE_SIZE_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa)

extern JAVA_OBJECT __CLASS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa;
extern JAVA_OBJECT __CLASS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_1ARRAY;
extern JAVA_OBJECT __CLASS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_2ARRAY;
extern JAVA_OBJECT __CLASS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_3ARRAY;
//XMLVM_BEGIN_DECLARATIONS
#define __ADDITIONAL_INSTANCE_FIELDS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa
//XMLVM_END_DECLARATIONS

#define __INSTANCE_FIELDS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa \
    __INSTANCE_FIELDS_java_lang_Object; \
    struct { \
        __ADDITIONAL_INSTANCE_FIELDS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa \
    } org_xmlvm_iphone_NSError_ErrorCode_NSCocoa

struct org_xmlvm_iphone_NSError_ErrorCode_NSCocoa {
    __TIB_DEFINITION_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa* tib;
    struct {
        __INSTANCE_FIELDS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa;
    } fields;
};
#ifndef XMLVM_FORWARD_DECL_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa
#define XMLVM_FORWARD_DECL_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa
typedef struct org_xmlvm_iphone_NSError_ErrorCode_NSCocoa org_xmlvm_iphone_NSError_ErrorCode_NSCocoa;
#endif

#define XMLVM_VTABLE_SIZE_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa 6

void __INIT_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa();
void __INIT_IMPL_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa();
void __DELETE_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa(void* me, void* client_data);
void __INIT_INSTANCE_MEMBERS_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa(JAVA_OBJECT me, int derivedClassWillRegisterFinalizer);
JAVA_OBJECT __NEW_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa();
JAVA_OBJECT __NEW_INSTANCE_org_xmlvm_iphone_NSError_ErrorCode_NSCocoa();
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileNoSuchFileError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileNoSuchFileError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileLockingError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileLockingError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadUnknownError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadUnknownError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadNoPermissionError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadNoPermissionError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadInvalidFileNameError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadInvalidFileNameError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadCorruptFileError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadCorruptFileError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadNoSuchFileError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadNoSuchFileError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadInapplicableStringEncodingError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadInapplicableStringEncodingError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadUnsupportedSchemeError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadUnsupportedSchemeError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadTooLargeError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadTooLargeError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileReadUnknownStringEncodingError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileReadUnknownStringEncodingError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileWriteUnknownError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileWriteUnknownError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileWriteNoPermissionError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileWriteNoPermissionError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileWriteInvalidFileNameError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileWriteInvalidFileNameError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileWriteInapplicableStringEncodingError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileWriteInapplicableStringEncodingError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileWriteUnsupportedSchemeError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileWriteUnsupportedSchemeError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileWriteOutOfSpaceError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileWriteOutOfSpaceError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileWriteVolumeReadOnlyError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileWriteVolumeReadOnlyError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSKeyValueValidationError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSKeyValueValidationError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFormattingError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFormattingError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSUserCancelledError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSUserCancelledError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileErrorMinimum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileErrorMinimum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFileErrorMaximum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFileErrorMaximum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSValidationErrorMinimum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSValidationErrorMinimum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSValidationErrorMaximum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSValidationErrorMaximum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFormattingErrorMinimum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFormattingErrorMinimum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSFormattingErrorMaximum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSFormattingErrorMaximum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSPropertyListReadCorruptError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSPropertyListReadCorruptError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSPropertyListReadUnknownVersionError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSPropertyListReadUnknownVersionError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSPropertyListReadStreamError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSPropertyListReadStreamError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSPropertyListWriteStreamError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSPropertyListWriteStreamError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSPropertyListErrorMinimum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSPropertyListErrorMinimum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSPropertyListErrorMaximum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSPropertyListErrorMaximum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSExecutableErrorMinimum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSExecutableErrorMinimum(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSExecutableNotLoadableError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSExecutableNotLoadableError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSExecutableArchitectureMismatchError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSExecutableArchitectureMismatchError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSExecutableRuntimeMismatchError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSExecutableRuntimeMismatchError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSExecutableLoadError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSExecutableLoadError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSExecutableLinkError();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSExecutableLinkError(JAVA_INT v);
JAVA_INT org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_GET_NSExecutableErrorMaximum();
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa_PUT_NSExecutableErrorMaximum(JAVA_INT v);
void org_xmlvm_iphone_NSError_ErrorCode_NSCocoa___INIT___(JAVA_OBJECT me);

#endif
