<?xml version="1.0" encoding="utf-8"?>

<!--
 * Copyright (c) 2002-2011 by XMLVM.org
 *
 * Project Info:  http://www.xmlvm.org
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
 * USA.
-->

<!-- 
The layout resource to be used for the SayHello user interface. A LinearLayout
aligns the three widgets EditText, TextView, and Button vertically. Each of
those widgets is given a resource ID via the XML attribute 'id'. The at-symbol (@)
at the beginning of the string indicates that the XML parser should parse and
expand the rest of the ID string and identify it as an ID resource. The plus-symbol
(+) means that this is a new resource name that must be created and added to the
R-class.  -->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
	android:orientation="vertical" android:layout_width="fill_parent"
	android:layout_height="fill_parent">

	<EditText android:id="@+id/editText"  android:layout_width="fill_parent"
		android:layout_height="wrap_content" android:layout_marginLeft="50px"
		android:layout_marginRight="50px" android:layout_marginTop="50px"
		android:layout_marginBottom="25px" android:layout_gravity="center" />

	<TextView android:id="@+id/textView" android:layout_width="wrap_content"
		android:layout_height="wrap_content" android:layout_marginTop="25px"
		android:layout_marginBottom="25px" android:layout_gravity="center" />

	<!-- The Button widget also defines a click listener via XML attribute
	     'onClick'. The method to be invoked is of name 'onClick' as well
	     and must be declared in the context that created the Button
	     (i.e., the Activity) -->
	<Button android:id="@+id/button" android:layout_width="wrap_content"
		android:layout_height="wrap_content" android:layout_marginTop="25px"
		android:layout_marginBottom="25px" android:layout_gravity="center"
		android:text="Say Hello" android:onClick="onClick"/>
</LinearLayout>
