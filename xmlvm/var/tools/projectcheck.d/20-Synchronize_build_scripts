check_file () {
	if [ ! -f "$1" ] ; then
		echo "File $1 does not exist."
		exit 1
	fi
}

sync_file () {
	check_file "$1"
	check_file "$2"
	CHECK=`diff $1 $2`
	if [ -n "$CHECK" ] ; then
		diff "$1" "$2"
		echo -n "Press [RETURN] to update file $2 from template, or [CTR]-C to cancel: "
		read QQ
		cp "$1" "$2"
		echo
	fi
}

sync_build_xml () {
	check_file "$1"
	check_file "$2"
	CHECK=`diff $1 $2 | grep '^[<>]' | grep -v '<project name=' | grep -v '<description>' | grep -v 'local.properties' | grep -v 'demoproject.properties'`
	if [ -n "$CHECK" ] ; then
		xxdiff $1 $2
	fi
}

sync_project_properties () {
	check_file "$1"
	check_file "$2"
	CHECK=`diff $1 $2 | grep '^[<>]' | grep -v xmlvm.sdk.jar= | grep -v application.title= | grep -v application.vendor= | grep -v dist.jar= | grep -v main.class= | grep -v android.skip.r.creation= | grep -v src.java.dir= | grep -v src.gen.dir= | grep -v resource.dir= `
	if [ -n "$CHECK" ] ; then
		xxdiff $1 $2
	fi
}

sync_project_xml () {
	check_file "$1"
	check_file "$2"
	CHECK=`diff $1 $2 | grep '^[<>]' | grep -v '<name>'`
	if [ -n "$CHECK" ] ; then
		xxdiff $1 $2
	fi
}

sync_build_impl () {
	check_file "$1"
	check_file "$2"
	CHECK=`diff $1 $2 | grep '^[<>]' | grep -v 'project xmlns:' | grep -v 'Cycle detected'`
	if [ -n "$CHECK" ] ; then
		xxdiff $1 $2
	fi
}


ILOC=var/templates/iphone
ALOC=var/templates/android

# Check template files
sync_file $ILOC/build.xml $ALOC/build.xml
sync_file $ILOC/build-Java.xml $ALOC/build-Java.xml
sync_file $ILOC/build-Xcode.xml $ALOC/build-Xcode.xml
sync_file $ILOC/xmlvm.xml $ALOC/xmlvm.xml
sync_file $ILOC/build-impl.xml $ALOC/build-impl.xml
sync_file $ILOC/project.xml $ALOC/project.xml

# Check files that can not automatically be tested
if ask "Do you want to skip testing of build.xml between demo projects and template files?" ; then
	true
else
	xxdiff $ILOC/build.xml demo/iphone/ifireworks/build.xml
	xxdiff $ALOC/build.xml demo/android/afireworks/build.xml
fi


# Check iphone target
for i in $IPHONE_PROJECTS ; do
	sync_file $ILOC/xmlvm.xml demo/iphone/$i/nbproject/xmlvm.xml
	sync_file $ILOC/build-Java.xml demo/iphone/$i/nbproject/build-Java.xml
	sync_file $ILOC/build-Xcode.xml demo/iphone/$i/nbproject/build-Xcode.xml

	sync_project_xml $ILOC/project.xml demo/iphone/$i/nbproject/project.xml
	sync_build_xml demo/iphone/ifireworks/build.xml demo/iphone/$i/build.xml
	sync_project_properties $ILOC/project.properties demo/iphone/$i/nbproject/project.properties
	sync_build_impl $ILOC/build-impl.xml demo/iphone/$i/nbproject/build-impl.xml

	rm -f $ILOC/nbproject/xcode.xml 
done
for i in $ANDROID_PROJECTS ; do
	sync_file $ALOC/xmlvm.xml demo/android/$i/nbproject/xmlvm.xml
	sync_file $ALOC/build-Java.xml demo/android/$i/nbproject/build-Java.xml
	sync_file $ALOC/build-Xcode.xml demo/android/$i/nbproject/build-Xcode.xml
	sync_file $ALOC/build-Android.xml demo/android/$i/nbproject/build-Android.xml

	sync_project_xml $ALOC/project.xml demo/android/$i/nbproject/project.xml
	sync_build_xml demo/android/afireworks/build.xml demo/android/$i/build.xml
	sync_project_properties $ALOC/project.properties demo/android/$i/nbproject/project.properties
	sync_build_impl $ALOC/build-impl.xml demo/android/$i/nbproject/build-impl.xml

	rm -f $ILOC/nbproject/xcode.xml 
	rm -f $ILOC/nbproject/androidsupport.xml 
done
